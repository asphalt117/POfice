@model Domain.Entities.OrderV
@{
    ViewBag.Title = ViewBag.Order;
}
@section metatags
{
    <meta name="description" content="@ViewBag.Title" />
    <meta name="keywords" content="@ViewBag.Title, АБЗ-4" />
    <meta name="robots" content="noindex, nofollow">
}
@*@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")*@
}

<h1>Новый заказ @Model.OrderId </h1>

@{Html.RenderAction("GoodOrder", "Good", new { ord = Model.OrderId });}

<div class="orderform-datetime disabled">
    <label for="Dat" class="col-sm-2 col-form-label">Дата и смена выполнения заказа:</label>
    <div class="form-group row disabled">
        <div class="col-sm-10">
            @{Html.RenderAction("DateOrder", "Ord", new { ord = Model.OrderId });}
        </div>
    </div>
    <hr />
</div>

<div class="orderform-contract active order-item">
    <div class="form-group row">
        <label for="ContractId" class="col-sm-2 col-form-label">Договор:</label>
        <div class="col-sm-10">
            @Html.DisplayFor(model => Model.Contract)
        </div>
    </div>
    <hr />
</div>

<div class="orderform-delivery order-item">
    @if (Model.Centr)
    {
        <div class="form-group">
            <label for="ContractId" class="col-sm-2 col-form-label">Адрес доставки:</label>
            <div class="col-sm-10">
                @Html.DisplayFor(model => Model.Adres)
            </div>
        </div>
    }
    else
    {
        @*<div class="orderform-transport order-item">

            <h5>Транспорт к заказу</h5>

            <table align="center" class="table table-hover table-bordered table-grey-header">
                <thead>
                    <tr>
                        <th>
                            Модель
                        </th>
                        <th>
                            Гос №
                        </th>
                        <th>
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item1 in Model.OrderDrivs)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item1.TecModel)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item1.Gn)
                            </td>
                            <td>
                                @Html.ActionLink(HttpUtility.HtmlDecode("&#xe020;"), "DelTrans", new { id = item1.Gn }, new { @class = "actionButtons btn btn-default", @role = "button", @title = "Удалить транспорт" })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <p class="help-block">
                <input name="Trans" type="submit" value="@HttpUtility.HtmlDecode("&#xe081;")"
                       class="glyphicon actionButtons btn btn-xs-sm-md btn-default glyph-btn"
                       role="button" title="Выбор транспорта" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* выберите из списка транспорт или внесите новый
            </p>


            <hr />
        </div>*@
    }
</div>

<div class="orderform-contact order-item">
    <div class="form-group row">
        <label for="ContactId" class="col-sm-2 col-form-label">Укажите контактное лицо:</label>
        <div class="col-sm-10">
            @Html.DropDownList("SelectedPersonId", (SelectList)ViewData["Person"], new { @class = "form-control" })
            <p class="help-block">
                <input name="Prs" type="submit" value="@HttpUtility.HtmlDecode("&#xe081;")" class="actionButtons btn btn-default" role="button" title="Внести новый контакт" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* выберите из списка контакт или внесите новый"
            </p>
        </div>
    </div>
    <hr />
    <div class="form-group row">
        @Html.ActionLink("Продолжить", "Finish",  new { ord = Model.OrderId}, null)
    </div>
</div>


@*@using (Html.BeginForm("Booking", "Ord", FormMethod.Post, new { @class = "form-horizontal", @role = "form", @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <fieldset>
        @Html.HiddenFor(model => model.OrderId)
    </fieldset>
    <div class="orderform-note order-item">
        <div class="form-group row">
            <label for="Dat" class="col-sm-2 col-form-label">Примечание к заказу:</label>
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.Note, new { @class = "form-control", @type = "text", @aria_describedby = "noteHelpBlock" })
                <small id="noteHelpBlock" class="form-text text-muted">
                    * тут вы можете указать удобное для вас время доставки продукции и другие ваши пожелания
                </small>
            </div>
        </div>
        <hr />
        <div class="form-group row">
            <div class="col-sm-10">
                <button type="submit" class="btn btn-primary btn-success">Сохранить</button>
            </div>
        </div>
    </div>
}*@



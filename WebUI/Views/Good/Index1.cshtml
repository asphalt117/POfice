@model WebUI.Models.GoodList
@using WebUI.Models;
@using Microsoft.AspNet.Identity.EntityFramework;

@using Microsoft.AspNet.Identity;
@using Microsoft.AspNet.Identity.Owin;

@using System.Collections.Generic;

@using WebUI.Helpers;
@{
    ApplicationUser user = (ApplicationUser)Session["usr"];
    //user = User;

    //user = HttpContext.Current.GetOwinContext().GetUserManager<ApplicationUserManager>();

  //  IdentityUserRole adminrole = new IdentityUserRole();
   // adminrole.RoleId = "1";
   // adminrole.UserId = user.Id;

  //  bool ff = user.Roles.Contains(adminrole);


    bool ff = User.IsInRole("1");

    string rl = User.Identity.GetUserName();
    string rl1 = User.Identity.GetUserId().ToString();

    ViewBag.Title = Model.CategName + " | Заказать";
    ViewBag.ContentTitle = Model.CategName;
}
@if (Model.PageInfo.itemsCount > Model.PageInfo.pageSize)
{
    @Html.PageNavigatorInfo(Model.PageInfo)
}
<div class="table-responsive product-table-wrapper">


    @if (ff)
    {
        <p>sdfsdfsdfsdfsdfsfdsdfsdfsdfs ADMIN</p>


    }

    @Html.Encode(rl);

    @Html.Encode(rl1);

    @*<p>sdfsdfsdfsdfsdfsfdsdfsdfsdfs ADMIN</p>*@

    <table class="table table-bordered table-hover product-table">
        <thead>

            <tr>
                <th>Наименование продукции</th>
                <th>Ед. изм.</th>




                @*if (User.IsInRole("Administrator") | User.IsInRole("Manager"))
                    {
                        @Html.ActionLink("Добавить товар", "Create", "Product", new { categoryId = Model.CategoryId, returnUrl = this.Request.RawUrl }, new { @class = "btn btn-xs-sm-md btn-success", @role = "button", @title = "Добавить товар" })
                    }*@


            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Products)
            {
                <tr>
                    <td>
                        @Html.ActionLink(item.txt, Model.Action, Model.Controller, new { id = item.GoodID }, null)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Unit)
                    </td>


                    @*<td>
                            @Html.ActionLink(HttpUtility.HtmlDecode("&#xe065;"), "ChDetail", new { id = item.OrderDetailId, act = "Edit" }, new { @class = "actionButtons btn btn-xs-sm-md btn-default glyphicon glyph-btn", @role = "button", @title = "Редактировать товар" })
                            @Html.ActionLink(HttpUtility.HtmlDecode("&#xe020;"), "DelDetail", new { id = item.OrderDetailId }, new { @class = "actionButtons btn btn-xs-sm-md btn-default glyphicon glyph-btn", @role = "button", @title = "Удалить товар" })
                        </td>*@


                </tr>
            }
        </tbody>
    </table>
</div>
@if (Model.PageInfo.itemsCount > Model.PageInfo.pageSize)
{
    @Html.PageNavigatorBootStrap(Model.PageInfo, "Index", x => new { categId = Model.CategId, pageNum = x })
}

